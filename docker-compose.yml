version: '3.8'

services:
  # frontend
  web:
    build: ./services/frontend
    container_name: frontend
    command: npm run serve
    ports:
    - "8080:8080"
    depends_on: 
      - api
    restart: always

  #backend
  api:
    build: ./services/backend
    container_name: backend
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  # db
  postgres:
    container_name: postgres
    image: postgres:14.0
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./services/backend/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always


  # gpt-2
  gpt2:
    build: ./services/gpt-2
    container_name: gpt2
    command: "python3 auto_generate_texts.py"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - api