version: '3.8'

# network for kong
networks:
  kong-net:
    driver: bridge

services:
  # frontend
  web:
    build: ./services/frontend
    container_name: frontend
    command: npm run serve
    ports:
    - "8080:8080"
    depends_on: 
      - api
    # restart: always
    networks:
      - default

  #backend
  backend:
    build: ./services/backend
    container_name: backend
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8005"]
    environment:
      BACKEND_USER: usr_backend
      BACKEND_PASSWORD: pwd_backend
      BACKEND_DB: backend
    ports:
      - "8005:8005"
    depends_on:
      postgres:
        condition: service_healthy
    # restart: always
    networks:
      - default

  # db
  postgres:
    container_name: postgres
    image: postgres:14.0
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./services/backend/postgres-data:/var/lib/postgresql/data
      - ./services/backend/db_init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # restart: always
    networks:
      - default

  # gpt-2
  gpt2:
    build: ./services/gpt-2
    container_name: gpt2
    command: "python3 auto_generate_texts.py"
    environment:
      BACKEND_USER: usr_backend
      BACKEND_PASSWORD: pwd_backend
      BACKEND_DB: backend
    depends_on:
      - api
    networks:
      - default

  kong:
    build: ./services/kong
    container_name: kong
    networks:
      - default
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: kong.yml
    healthcheck:
      test: [“CMD”, “curl”, “-f”, “http://kong:8000”]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"